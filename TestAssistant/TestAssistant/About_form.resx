<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAApwAAACICAYAAABKkzsBAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiMAAC4jAXilP3YAAB77SURBVHhe7Z0/kh43ksXnCNKegLEnUMRegMYcgM74smTL
        kzvmmHLHoz0W/XF0gDF0gY2gtaZCN9C+1/yKKoLZ3QVUIhN/nvGLYH+sSiRQWYlXAAr1lz/++EMIIYQQ
        Ykj+7y//9R34Hvwd/PLgjwt8BMfxPPdH8BZ8Y5Uj+mL+KIQQQgiRAQThm4c4vCosW6AYfQ8oZCVAAzB/
        FEIIIYSIgqIPUGT+CiyB2JPvLZ+EL+aPQgghhBC9gdjjaCZHGi0hGMVbyzfhi/mjEEIIIUQvIPJGEJoH
        EpwBmD8KIYQQQvQAAo8v8FjCLwsJzgDMH4UQQgghPIGw49vmGWs0X0OCMwDzRyGEEEIILyDq+Db47yeR
        NxJvLJ+FLyMObU9B2ZBCCCGE+Br0mUPrjNJf0QcJzkbKhhRCCCHEl6C/HOXFoGcpfRZ9kOBspGxIIYQQ
        QvwJ+srhxSYp/RZ9kOBspGxIIYQQQnwC/eQ02qL0XfRBgrORsiGFEEII8SQ235V95sD8atVB+CPB2UjZ
        kEIIIcTuoH/khu6jvo1u8YtVD+GPBGcjZUMKIYQQu4P+8ZeyvxwcCc4gJDgbKRtSCCGE2Bn0jdxr0+wz
        B0aCMwgJzkbKhhRCCCF2Bf3iN2CmqfQDCc4gJDgbKRtSCBEL7sNvrN+FEPHgfpxVS/zdqs9owM/p850E
        ZyNlQwoh+oL7ji8jcMruZ/D0PebyGCFEPLgXZx3dJEMKTvi1XL6T4GykbEghhC+4z96CH8EHYHZm5TlC
        iHhwL86sI4YQnPBj+XwnwdlI2ZBCiHZwT3GEhHv3MR9dfsu1tCOEiAf34sfy3pyIcMGJMrfMdxKcjZQN
        KYS4Du6h7wCni/jpu+bOqrQrhIgF9+GMb6af6S44UYbyHZDgbKRsSCHE8+Ce4XQRc82z00UtlOUIIWLB
        fch72rw/E6CYo6hjrinhWkiOJpaC761VrzvQJmCZyncnJDgbKRtSCPEJ3B9c7M7pos+L3XtRli2EiAP3
        IKeGzXszGIrMN5aPFjj2mNLmed9Zx1yF5T5sKd+9ggRnI2VDCiGekm/oaEdZvhAiDtyD2dPpFHiXhaY3
        KFv5rgIJzkbKhhRCPCXg0M/aleULIeLAPcgRQvPeDOC95VMk8EH5rgIJzkbKhhRCKAELsRO4B7P23vxg
        +RMN/FC+q0CCs5GyIYUQSsBC7ALuP755bd6XneFLP0N8dQd+KN9VIMHZSNmQQgglYCF2Afdf1vrN7y1/
        MoAvyncVSHA2UjakEEIJWIhdwP3Ht7LN+7IjHy1fsoA/yncVSHA2UjakEEIJWIhdwP0Xeq8/GGZ0k8Af
        5bsKsgQny5waqzGF2B3cG0rAQmyAdT8GMMTazQP4o3xXQYrgLJ0QQqwB7m8lYCEWB/dexobvv1i+ZEKf
        Ch+7UpY/GxKcQgg3cH8rAQuxOLj3+OlG857syHAzi/BJ+a4CCU4hhBu4v5WAhVgc3HsZgvOd5Usm8En5
        rgIJTiGEG7i/lYCFWBzce+G6Adz65nkP4JPyXQUSnEIIN3B/KwELsTi496QbAPxSvqtAgSOEcAP3txKw
        EIuDe0+6AcAv5bsKFDhCCDdwfysBC7E4uPekGwD8Ur6rQIEjhHAD97cSsBCLg3tPugHAL+W7ChQ4Qgg3
        cH8rAQuxOLj3pBsA/FK+q0CBI4RwA/e3ErAQi4N7T7oBwC/luwoUOIuD9uZ+aYTXmXwAvEnIR2BeIwMe
        e5z3M6At2n1jlSs+gfbhFznYTj8CttnRhr8Dq51LeNxxzntAG9+Dt1Z52Tz8tOrRhbL8VUFdt4qjaNAO
        z7Xvr8BqzxIex+OZX3k+7Szbto86Wu3QjdKHEYBfvOamvz0oy58NBc4ioF3fgHfgSJY1YtIDlsmyt+7A
        UH92XOzI2alf7azuwOvMTm6IDg4+KAE7gLptHUe9YR0B8xXrfFW0t8Lrx+vI67nEAzrqId0A4JfyXQUK
        nElBO34H2DlEJMxa6A/9+t7yfTVQz0McsM5We0RzCIfbndvJ5i6kfT4PZS8bR9mgDue2zc6XFKBDtSt8
        CdcBiTz7QGUcuzqh+S4l0EonxDXQdhzB5JNy9OjlHZjc6fNyU++oE0U/62bVexSOzu0bqw6vcbKzC+GC
        E2UuH0dZwF+OZI7ctmxXCuHUdkX5EpzAOHZ1JDjFn6C9DpE52ihmCxxdGO7zZLWgDuzEQqdSnGAcVU2X
        FufvQFgCRlnbxFEk8O0YzZztwZx9cYrwfJRt+bUiEpx/IsG5O2gjrsfkdZkpYdbADmuqkRICn3ldRpnu
        vMPl0Wbj3NXpnoBRxnZxFAV8Yt6c+eE8RXg+yrT8WREJzj+R4NwVtA07opGnfzxhYv3RaocRoa8Pn626
        zMRHq37PYZy/Ol0TMOxvGUe9gT+zjWi+Rmh+RFkSnMA4dnUkOHcDbbKT0CzhSM+wo530Dcw47fkc7616
        Podx/up0ScCwu3Uc9QJ+MHeu1K4lXOPZfRkSypDgBMaxqyPBuRtoE456mG21CSFJtRb6BFYYjTpTtXOA
        cf7quCdg2Nw+jnoAH3bKm11HO2FfghMYx66OBOduoE3YIZlttRHskIcRnfCFL2utJhJI1bo74/zVcU3A
        sKc4cgZlrzZafJVus0GwK8EJjGNXR4JzR9Auq74gVMMQohM+cD2Y5d/s/GrV9yUMG6vjloBhS3HkDMrm
        w/nOubLLbBBsSnAC49jVkeDcEbQLPxdpttdmpIpOlM2taiy/VuBnq84vYdhYHZcEDDuKI2dQ7qqjxbW4
        50jYk+AExrGrI8G5I2gXJlOzvTaET/HhLxKhzBXX2p15Z9X7JQwbq3M7AcOG4sgZlLnqaHErrqITtiQ4
        gXHs6khw7orVVhvzwWqjXqA8rguj0LV8WYVqEW/YWJ1bCRjnK46cQXkSmzZuohN2JDiBcezqSHDuCtpm
        hc2gPYnch271JQ1N6+4MO6tzV3AqjhxBeRKbL+MiOmFDghMYx66OBOeuoG2UXL+EybT7aArKWHm93UHT
        ujvDzuo0J2CcqzhyBGVp945r3M6TOF+CExjHrs76gnNing1UD2Cfmxhb5e5M9w2mUcbqU6Ckad2dYWd1
        7ghOxZETKIe5kELK8kF8za2RZ5wvwQmMY1dHgnNgugpOgjJ26LRq6fbWOmxvMapc1vsqlq3FaUrAOE9x
        5AjKUh6sp3n0GedKcALj2NWR4ByYCMGp6/E13UY5YXuHju0Xq+5XMGytTqvgVBw5gXK0RVw7rTMZEpzA
        OHZ1JDgHJkJw9li3xI2S+WUOvpTE6/0SPGbEr3i4f9kENkdZc8f2fg7r+Fqak4pha3Wq2wrnKI6cQBk7
        rIPtSdN6TpzD3G/ZWxEJzj+R4ByY7oKToJw7a5fYufCacl/PW1PRPB/we8VeHdYd3F9WgM33RRlR8AGA
        7Xr5+uBYdsQ8hz7XfmmlOW4NW6vTIjgVRw7APreUqvWpN+d8yrY7w2UUHI0dzefqGSGcI8EJjGNXR4Jz
        YKIEZ00Hxqk8XsPenQEX8Wd1rOR3y6870GZRRm9YnstWT7DD68EO79WttMpza7DsLU6L4FQcOYAyRumL
        KCDZJpdHCnEsH84z82NJVX+A4yU4gXHs6khwDkyU4Hztq0MUmRylcJ9mfg2UycSatV7N7Q1Z2IrecoUi
        ocvLT7DLkSF2kNZ1ubWBvmFvdaoSMI5XHDkA+yPs0HFbyOP8zPx4pmq9LY6X4ATGsasjwTkwUYKTib8s
        m8mQ0zfhIrMEPmR9TcXt5SHYio77qO1kypGWsM3zCcoLXX5Rlh8NfFAcOVCUlQHzmVtuha0RXnzq1l/B
        drhuKH0YAfi1Vb67S0rgTEyI4CQo65jiepresY7JBD5lrLdym1aHrVenEB0J/ToLQZkcMWKn12U07DlQ
        3m6CU3F0k0cZVn2joNh0/8AEbHK02Covim67CsC2BCeAXxKcFaQEzsRECk4mq+GE5hm2x6NdInHp+GAn
        MlGETltkgrruJjgVRzdBvTJHN7uIzQPYzu5fu/RZsCvBCeCXBGcFI9wQMxEmOGcBbRJ6wwGvlyUs270I
        mQYdAdR1N8Fp+tWJ5eIIdbKWD0XBZUrdlyihjMhR8JIuexjDrgQngF8SnBWkBM7ESHAWoE348pLVVr1w
        SaCG3Z6ErqPMBHWV4OzHcnHEOhV1jCRqPSxFNcWt5UMEPZYLSHAC+CXBWUFK4EyMBGcB26Roo964rGMz
        7Pak25eSRgN1leDsx3JxhDpl7WHZ9a37EpSXuZ7T/UEFNiU4AfyS4KwgJXAmRoLTwGinrpTlt2DZ7UjI
        1N0IoJ4SnP1YKo5Ql+gtpc6EtyPKzBLX7i+bwaYEJ4BfEpwVpATOxEhwGhjt1JvbnYVhszddX04YBdRR
        grMvy8QR6pG1dVDKSDHKzRzldBXYsCfBCeCXBGcFKYEzMcsKTtSN64yOT7ZxXRXjgvANUt5UL2G1VU9u
        XwfDZgSue/2NCOoXGg9l+dFYPgWwRByhDlkjfmlth7Kz6uw6rQ57EpwAfm2V7+6SEjgTM73gRB04jcUn
        bV533izsvKy6jsztxf6GzSg4LbrsS0SomwRnDFPHEXzPmk7vtjflFVB+Vn/rumYV9iQ4AfyS4Kwg8waY
        kakEJ/zlqCU/k8mpq9AbozO39yOEjWyhzZGOofdZbQF12k1wKo4agM9Zb6enthXKz9rk3u2jGQT2JDgB
        /JLgrCAlcCZmeMEJHzlywGs648jlVTwEZ+beeGc4UsXrtcRUO+qxm+BUHDUAP7PaLX39K3zIys1uX4uC
        LQlOAL8kOCtICZyJGVJwwq/j83NZ64Oi8RCcmfv/PQeTF5c7TPtSyKMOVt26UJYfDXxQHDUA3zJyVfin
        QS3gR9bLUm6ju7AlwQnglwRnBSmBMzFDCU74w05l5ZHM5/AQnNnfb34JjlbxZa3pviwDn3cTnIqjSuBP
        1teFfrb8iQZ+cJmT5V9v3OoPWxKcAH5JcFaQEjgTky444QOTNa8ZOxPLxx1w+aY07Mwg1g/RMMX6Yfi5
        XQKGH4qjCujDw6dohhDe8CNLcLu9MAVbEpwAfklwVpASOBOTmqxR/u5C88BLcGbui9cCpyE5hTvyVOmO
        glNxVAHKzepzhlnfCl8ylhR8tHxpAbYkOAH8kuCsQIEzAWgzjgjssj7zCi6Ck8DWrO3K0arhXhCBT1sm
        YPiiOLoIyktZw1j6kQn8Cb1PDko/WoEt6QYAvyQ4K1DgDAzailMvo7wFOxKegnO20amSoYQnfNlVcCqO
        LoJyMsRW6v6bJfAna5TXZVQbdqQbAPyS4KxAgTMoaCeOamr63MZNcBLYSxltcGYI4Qkftk3A8EdxdAHY
        z2gn143P7wJ/sgSny7Iw2JFuAPBLgrMCBc6AoI1mHy3pjbfg5N6lK4h71iH16zMof2fBqTi6QFFWFK45
        4y7wJ+vFKQlOR+CXBGcFCpzBQPtwhMFsN/EZ984DNlcS+XxrOmW0E+VunYDhk+LoFYoyopDg/IQEpyPw
        S4KzAgXOQKBtJDav0aXzgN2V2p+jVOGf8UOZ2ydg+KU4eoHCfhQSnJ+Q4HQEfklwVqDAGQS0i8Tmdbp1
        HrC92nUI3ewa5SkBA/imOHoGw3YEqUtNSuAPl19YfvZGgtMR+KV8V4ECZwDQJiN+Hm9kuo5WwP5qYuG9
        Vc8eoCwl4AfwT3FkYNiNwEVoeWL4GIEEpyPwS/muAgVOMmiPrKmVmek+PYYysr533IsQ0YlylIBPwEfF
        UYFhMwIJzk9IcDoCv5TvKlDgJIK24D6bK7zVGk3IeiyUwxdAVro+EUJdCbgAfiqOThj2IhhtSl1rOCsp
        fRgB+KV8V4ECJxG0xcibuvPLKbyZGB/kHWCSPPji7VX8bdnoRYjgJCiLa61m+Fb2Vbp+Txr2lYAN4Kvi
        6IFhK4KwnHEF+CPBWUnpwwjAL+W7ChQ4SaAdshLOcxzisikhnexEEN55sMzCh1nhSFu3b2jDthLwC8Dn
        7eOosBOFBOcnJDgdgV/KdxUocJJAO4QG6jNwxIXTfbcFyMlmBCmdB8p9A0a4bnfptp4TtpWAXwF+bx1H
        hp0IJDg/8Z3lTy2wI90A4JfyXQUKnATQBtmjm7xJXJ50Dwr7vUntPFA+r9/sgsH1+h/ArhLwReD/lnFk
        2IhA31IHpR+twJZ0A4BfyncVKHASQBtkdTKcBuuyeL4opzdDjFbAj5kFQ5cOmHaLcrpSlj8jqMdWccRz
        ChsRSHCC0o9WYEu6AcAv5bsKFDjBoP6cTjPbpTMUmy7TKRZFWb0ZcXpsxj0Xe3y2UAm4EdRnizjC8Sni
        uvQjE/gzteiGLekGAL+U7ypQ4ASD+mds8k6x2fXb2kV5vRlKcB7AL25zxevLN/wtv0fD/StEsKkEfBPU
        a+k44vHF+VF0zYE1wJeMa/vB8qUF2JJuAPBL+a4CBU4wqH/G1ijdRjYPjDJ7MqTgPAMfuQ0OO9aRRcNH
        y/c7wGb0yM0wIqIHqN9ycYTjw/ucB67fhG8FfvCBwvKvN255k7YK290pfRgB+KV8V4ECJxDUPSPRhIgz
        o9yeDC84z8DfkUWD68MI7EUn4C4vP40I6rpEHOFYLh2wbPTGfUS/BfjBPY0t/3rjtgcvbEk3APilfFeB
        AicQ1D0j0XTbc/GMUW5PphKcZ+D7aOv0XF8igz0l4ABYbzBlHOHYrBE+9xH9FuBH1nVzGx2DLekGAL+U
        7ypQ4ASCuke3tduanZdAOdEvQk0rOA9QB3a6jAeur7XqGIXrnpywpwQcCOo/ZRzh+KxR2vQpSfiQUXdX
        sQ170g0AfinfVaDACQR1jw7OkO8Ho5zoKbLpBecB6kLBkPUSBXHdLob2Cvu9Geob2VmgHaaKIxyfNcqX
        Gi8on8siLL964/1gKd0A4JfyXQUKnEBQ9yWfhlhOUW5vlhGcB6gT2zBjlOp3y59WYC86xpeLhTugPaaI
        IxzPL5xZdnqTOq2O8rOEtusLU7An3QDgl/JdBQqcQKy26EzI9BHKiY6hJUUG6sXRj3CxUPpxB9iLTsBD
        beg9AmiT4eMIx2ftR0xSpiVRLkehs5Y+uK7lhz3pBgC/lO8qUOAEYrVFT8rye4GyPpRld2bZUS3ULXzk
        p/ThDrAXnYBdR2hXAe0yfBzhnIwt4khKp41yw/vaB79a/twBNqUbAPxSvqtAgROI1Radidh/k0/tVtk9
        WXoaFfULHQUpy78D7EUnYOK23ctKoF2GjiOck/ERjIPQUU6Ulzm66b7uDzalGwD8Ur6rQIETiNUWneme
        VFFGxlP76oIzNImV5d8B9qJHu4nrCxGrgHYZOo5wTua0euhaTpSX+UKX+9Z4sCndAOCX8l0FCpxArLbo
        TFdhBvvsMDKe2lcXnKH3ZFn+HWAv4wGEdB/Nnw20yfBxhPMyRogOQvIIyol+qfJMF3ECu9INAH4p31Wg
        wAnEaovOuK/dOQP7WZ2FW0cBW+wMhpqigD+hb7KW5d8B9rISMNcDhnzkwAJlK44MH14D52W9rX7Q9ZrB
        PqfSM78M1WWWC3alGwD82jLftZLVYCxzFS5vN4FjrbboTa+Ek7W9B/EUnMdUF8VzyturJfAj8mUK7w2h
        sz7bRzi9lZKEUa7iyPDhCjy3sBUJZ2i6jBbBLsVm1otRpNuAA2yz77PK7EbpwwjAry3zXSspgbMYl994
        xLEZ08893lDMFJvEU3CWHQL/dt2zrgaUHb2uzfWNXdjLnD4kFC/hgg9lKo4MP66Ac7P7IHfRCXvZYpN0
        iz/YluAE8GvLfNfKCDf77NQIzqwpaJd1PLDDJJotNomL4IQd1seyT9gJsa6ha2VQXnSMuK9jM8rIgImY
        o46csmWnYMHRCeY/Hsd2b/oULM5THN2II5zL9st4GC9xeZsbdrgParbY7L2cSoLzgeVrAmH57g4pgbMY
        NYIzU6yx7Obhd5zLgM2c+jrjJTivToccN3M30QDbWWLefQ0bbI4SJ7U0jdLhPMXRzTjC+ZlbJJ1hR9z8
        wQycy/50BPHcddQL9iU4H8C3rfLdHVICZzFqBGf2AnneGFXTLDienWn0aMlr/Gz5WgvtFHavcIxY8Vq6
        fMnpYSsrabmvAYLNjK1CPGgVnIojhziCjZE6bl6bSyIax3H5AvvRUfzvPnKFMiQ4H8C3rfLdHVICZzFq
        BGfmvnNnmBjZSVJMfn4Sxr85OsKRTHZcTLgjdQBnXG4U2PGY9qJwoCDnffTUnuDFzhf/zyk3HstrkNnG
        XabdYHfWnNIqOBVHhn+1wA7rbNnP5rguJcyR2VPnJYyj7p80Rhmsv1V+N0ofRgG+hbeFExKcE1J10XD8
        qCJuJm7fKLDx0ro7T9ghscNiR2D9fybuXyAhsEshZJU3OtVxhXMUR45xBFuzjhaNQpd7ugTlSHA+gG/b
        5Lu7pATOYtQKzpbpN/ElHoKTI0OW7V2gcHGfTj942LfKHZkWwak4cowj2gJ6KG8jTECgLAnOE/Bvi3x3
        Buf/FfwT/Odhj/wv+Bf4wTonJXAWo1ZwjjKtPjMegnN34d/182i0X5Q3Ay2CU3FktMsdYHPUqfWR6foA
        WYKyJDhPwL8t8h3Bef8D/n2y89vjb1KKz7+dz00JnMVo6aQ4NWbZEtfwEJyjrb2Kpus6L9ifceSv5V5W
        HBntchfYHeWt9VmI3nZLgvME/Nsl3/0AKDB5PgXmF4Lyccx/A458HuX8dPxfSuAsRstF0xP8PW4JTpwf
        te5uVNz33rRAObNNM1XFFY5XHBnt4gXszzhqlEH4BwZQpgRnAXxcPd9xZPM49x/WMWdwzN9Oxz9NsacE
        zmI0iR+eV9gR17krOHded8f1cSFTbyhnttxSm4AVR0a7eIIylCdfJuVrVihXgrMAPi6b73Dst4BT5Dzv
        n6ffOcp5jHgSHsPRzW8f///T43ce8+2MjTQarYJTo5zt3BWcO6+7C5t6Q1kcAZzpqb9WcCqOOoNyGEO7
        L1t4jsxPp0pwFsDHZfMdjuVUOs95Eo6n3w9bFJbkEKX/Oh1z/PZTSuAsRrP4wbl6Y72Nj1Z7XgXn79qB
        hWyZcgZlzpRfagWn4igAlCfR+TVpYpOgfAlOA/i5ZL7DscdLQl9MpT9+wz8///15Gv302z8ev/17tgYa
        kTuCk4lUW4A0ULblVXAu29y0uThd30p/DpQ701N/TQJWHAWCctneWtP5iVSxSeCDBKcB/Fw13x3T5n8t
        fn+ydfr7eFnoszDFv7l90tNx/EOC8x7NgpPgfG4aO9tiYwuOQIStaSvb8So4d8d1dyki4QDlz9LmNQlY
        cZQAfNh5Voj9ROjb6M8BPyQ4nwG+rpjvjnNMwVlQjoJKcDpyS3AS2OCnJC3bs0CxySe7sC8ulG14FZy7
        W4eVLhII/Jih3WsSsOIoCfjCfLnCQ3oNfHkqbJ/N14AvEpwvAH9Xy3fHCOcX2yA9fiNcv3lMnZPPwpT/
        fvz2W0rgLMZtwUlgZ1bR+SQ2T/WwjulB0/5/OG+ntWDhazZfAv6M/sZxTQJWHCUCn/gBjV2uQcg2ZjXQ
        p8LH7pQ+jA58Xinf8etBPOfzG+qP359snf4+ROf5pSGt4XTERXAS2JpNdHJN1RdP3fg76iZ7ey73Cjhn
        l3V3XBdc3T69gU9s/5FFwqV7GccpjgYB/rH/WnW0k7l0iCn0EvglwfkK8HmJfEdw7ItvqZ/+Pl4a+u30
        2/GW+g/8Q4LzHm6Ck8Ae13/MkEDNUQ/8HrWwv0Vw7rAVFadyhpl6K6Fv4MPD19G4KjgVRwMBPznaOWpM
        tcD8n/5i0EvAPwnOC8Dv6fPdAY63tjx6snX6m/t1fn7BCBz7cPJc7cPpgKvgJLA58nQR/Xr2qRv/F/VJ
        uqZpJpxHsTD6VEcLrNPQo1Fn4OuIeafmiV9xNBj0++G/Va8ZoNDkfTG80H/4adWhG6UPMwH/p853BMfz
        S0OHmPxiat0CxxyjouRp7eeoDTET7oLzALZHujZMhq+u5cIxUaM/t9Y14XyKeo7Gzj4dN7NA4EtmIz1Y
        Vd/LOEdxNBisx6M+Vj1HhEsX+KA+xYgyga8SnJWgDivkO45aHqKTo5ZPn6wsjim/pf75mJTAWYxugpPA
        /tGhWWVHUPXUzeMe5/XGrd1hi2tnZ5qS4zVhTAy5vqsW1IPtP8J+tLdiCucrjgYC9WLu5NKAUR8GGCvv
        LN9HB35LcDaCukyd73AeBeWxEfwB/yb/Of1GQfrFW+0pgbMYXQXnAcqJHknhkxhvjOqnbpwTcTP9apV9
        B9ikWOYaWrbzCAnhzCEOpuygroC6Md4yRwBctv6BHcXRYLC+j3pni0+KzKa8OhLwX4LzJqjT1PkO53O0
        kyOZZ5HJ0U++0f7VyCf56gcxNriQ7MwYqD1GUjgNxamdpi2HVoPtANhRcZQkeoqOHSOvMRP7kiNQz4H6
        st0Zh72TMcUg27hrzNM2UBwNAtsB8JqzXXoLUF5vtv1WAl9cB7GxVL57CfNHMQ8IHK5XYkLj0/vVzoyB
        zWPZATL4lli7FQHaismBbc52Y7vzBmZbtggJJoDjXNp6uhZg6tEPT9gWjzY5x/jVUcNz+/Jc2uDDWnob
        o3zF0SCgnY5rwbY7HgpqrsORT48Y48OFxL2oBnGzZL77xB9/+X9xxpKUf0RDTgAAAABJRU5ErkJggg==
</value>
  </data>
</root>